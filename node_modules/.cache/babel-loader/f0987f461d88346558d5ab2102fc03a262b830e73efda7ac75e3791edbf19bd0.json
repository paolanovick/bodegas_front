{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3000/vinos'; // La URL de tu API para vinos\n\n// Obtener todos los vinos\nexport const getAllVinos = async () => {\n  try {\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al obtener vinos:\", error);\n    throw error;\n  }\n};\n\n// Crear un nuevo vino\nexport const createVino = async vino => {\n  try {\n    const response = await axios.post(API_URL, vino);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al crear vino:\", error);\n    throw error;\n  }\n};\n\n// Actualizar un vino por ID\nexport const updateVino = async (id, vino) => {\n  try {\n    const response = await axios.put(`${API_URL}/id/${id}`, vino);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al actualizar vino:\", error);\n    throw error;\n  }\n};\n\n// Eliminar un vino por ID\nexport const deleteVino = async id => {\n  try {\n    const response = await axios.delete(`${API_URL}/id/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al eliminar vino:\", error);\n    throw error;\n  }\n};\n\n// Obtener un vino por ID\nexport const getVinoById = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/id/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al obtener vino por ID:\", error);\n    throw error;\n  }\n};\n\n// Obtener un vino por nombre\nexport const getVinoByNombre = async nombre => {\n  try {\n    const response = await axios.get(`${API_URL}/nombre/${nombre}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al obtener vino por nombre:\", error);\n    throw error;\n  }\n};\n\n/////////////////////////////\n\n// Obtener vinos por tipo\nexport const getVinosByTipo = async tipo => {\n  try {\n    const response = await axios.get(`http://localhost:3000/vinos/tipo/${tipo}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener vinos por tipo:', error);\n    throw error;\n  }\n};\n\n// Obtener vinos con ordenamiento\nexport const getVinosConOrden = async (campo = 'nombre', orden = 'asc') => {\n  try {\n    const response = await axios.get(`http://localhost:3000/vinos/orden?campo=${campo}&orden=${orden}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al obtener vinos con ordenamiento:\", error);\n    throw error;\n  }\n};\nexport const getVinosConPaginado = async (page, limit) => {\n  try {\n    const response = await axios.get(`${API_URL}/pagina?page=${page}&limit=${limit}`);\n    return response.data; // Devolver los datos de la respuesta\n  } catch (error) {\n    console.error('Error al obtener vinos paginados:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","getAllVinos","response","get","data","error","console","createVino","vino","post","updateVino","id","put","deleteVino","delete","getVinoById","getVinoByNombre","nombre","getVinosByTipo","tipo","getVinosConOrden","campo","orden","getVinosConPaginado","page","limit"],"sources":["C:/Users/LENOVO/Desktop/fullStack-vinci/gestion-bebidas/src/services/vinoServices.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:3000/vinos'; // La URL de tu API para vinos\r\n\r\n// Obtener todos los vinos\r\nexport const getAllVinos = async () => {\r\n  try {\r\n    const response = await axios.get(API_URL);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al obtener vinos:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Crear un nuevo vino\r\nexport const createVino = async (vino) => {\r\n  try {\r\n    const response = await axios.post(API_URL, vino);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al crear vino:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Actualizar un vino por ID\r\nexport const updateVino = async (id, vino) => {\r\n  try {\r\n    const response = await axios.put(`${API_URL}/id/${id}`, vino);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al actualizar vino:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Eliminar un vino por ID\r\nexport const deleteVino = async (id) => {\r\n  try {\r\n    const response = await axios.delete(`${API_URL}/id/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al eliminar vino:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener un vino por ID\r\nexport const getVinoById = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/id/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al obtener vino por ID:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Obtener un vino por nombre\r\nexport const getVinoByNombre = async (nombre) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/nombre/${nombre}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error al obtener vino por nombre:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/////////////////////////////\r\n\r\n\r\n\r\n// Obtener vinos por tipo\r\nexport const getVinosByTipo = async (tipo) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:3000/vinos/tipo/${tipo}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error al obtener vinos por tipo:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  // Obtener vinos con ordenamiento\r\nexport const getVinosConOrden = async (campo = 'nombre', orden = 'asc') => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:3000/vinos/orden?campo=${campo}&orden=${orden}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error al obtener vinos con ordenamiento:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  export const getVinosConPaginado = async (page, limit) => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/pagina?page=${page}&limit=${limit}`);\r\n      return response.data;  // Devolver los datos de la respuesta\r\n    } catch (error) {\r\n      console.error('Error al obtener vinos paginados:', error);\r\n      throw error;\r\n    }\r\n  };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}