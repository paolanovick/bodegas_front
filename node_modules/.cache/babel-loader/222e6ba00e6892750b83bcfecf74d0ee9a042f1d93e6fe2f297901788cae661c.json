{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3000/bodegas'; // Cambia según tu backend\n\n// Crear una nueva bodega\nexport const crearBodega = async bodegaData => {\n  return await axios.post(`${API_URL}`, bodegaData);\n};\n\n// Obtener todas las bodegas\nexport const obtenerBodegas = async filters => {\n  return await axios.get(API_URL, {\n    params: filters\n  });\n};\n\n// Listar todas las bodegas\nexport const listarTodasLasBodegas = async () => {\n  return await axios.get(`${API_URL}/listar`);\n};\n\n// Obtener una bodega por ID\nexport const obtenerBodegaPorId = async id => {\n  return await axios.get(`${API_URL}/${id}`);\n};\n\n// Obtener una bodega por nombre o descripción\nexport const obtenerBodegaPorNombre = async descripcion => {\n  return await axios.get(`${API_URL}/${descripcion}`);\n};\n\n// Actualizar una bodega por ID\nexport const actualizarBodega = async (id, bodegaData) => {\n  return await axios.put(`${API_URL}/${id}`, bodegaData);\n};\n\n// Eliminar una bodega por ID\nexport const eliminarBodega = async id => {\n  return await axios.delete(`${API_URL}/${id}`);\n};\n\n// Obtener bodegas con paginación\nexport const obtenerBodegasConPaginado = async (page = 1, limit = 10, vinosLimit = 5) => {\n  return await axios.get(`${API_URL}/pagina`, {\n    params: {\n      page,\n      limit,\n      vinosLimit\n    }\n  });\n};\n// Agregar vino a la bodega\nexport const agregarVinoABodega = async (id, vinoId) => {\n  return await axios.put(`${API_URL}/${id}/agregar-vino`, {\n    vinoId\n  });\n};\n\n// Eliminar vino de la bodega\nexport const eliminarVinoDeBodega = async (id, vinoId) => {\n  return await axios.put(`${API_URL}/${id}/eliminar-vino`, {\n    vinoId\n  });\n};","map":{"version":3,"names":["axios","API_URL","crearBodega","bodegaData","post","obtenerBodegas","filters","get","params","listarTodasLasBodegas","obtenerBodegaPorId","id","obtenerBodegaPorNombre","descripcion","actualizarBodega","put","eliminarBodega","delete","obtenerBodegasConPaginado","page","limit","vinosLimit","agregarVinoABodega","vinoId","eliminarVinoDeBodega"],"sources":["C:/Users/LENOVO/Desktop/fullStack-vinci/gestion-bebidas/src/services/BodegaService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:3000/bodegas'; // Cambia según tu backend\r\n\r\n// Crear una nueva bodega\r\nexport const crearBodega = async (bodegaData) => {\r\n  return await axios.post(`${API_URL}`, bodegaData);\r\n};\r\n\r\n// Obtener todas las bodegas\r\nexport const obtenerBodegas = async (filters) => {\r\n  return await axios.get(API_URL, { params: filters });\r\n};\r\n\r\n// Listar todas las bodegas\r\nexport const listarTodasLasBodegas = async () => {\r\n  return await axios.get(`${API_URL}/listar`);\r\n};\r\n\r\n// Obtener una bodega por ID\r\nexport const obtenerBodegaPorId = async (id) => {\r\n  return await axios.get(`${API_URL}/${id}`);\r\n};\r\n\r\n// Obtener una bodega por nombre o descripción\r\nexport const obtenerBodegaPorNombre = async (descripcion) => {\r\n  return await axios.get(`${API_URL}/${descripcion}`);\r\n};\r\n\r\n// Actualizar una bodega por ID\r\nexport const actualizarBodega = async (id, bodegaData) => {\r\n  return await axios.put(`${API_URL}/${id}`, bodegaData);\r\n};\r\n\r\n// Eliminar una bodega por ID\r\nexport const eliminarBodega = async (id) => {\r\n  return await axios.delete(`${API_URL}/${id}`);\r\n};\r\n\r\n// Obtener bodegas con paginación\r\nexport const obtenerBodegasConPaginado = async (page = 1, limit = 10, vinosLimit = 5) => {\r\n    return await axios.get(`${API_URL}/pagina`, {\r\n      params: {\r\n        page,\r\n        limit,\r\n        vinosLimit\r\n      }\r\n    });\r\n  };\r\n// Agregar vino a la bodega\r\nexport const agregarVinoABodega = async (id, vinoId) => {\r\n  return await axios.put(`${API_URL}/${id}/agregar-vino`, { vinoId });\r\n};\r\n\r\n// Eliminar vino de la bodega\r\nexport const eliminarVinoDeBodega = async (id, vinoId) => {\r\n  return await axios.put(`${API_URL}/${id}/eliminar-vino`, { vinoId });\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,+BAA+B,CAAC,CAAC;;AAEjD;AACA,OAAO,MAAMC,WAAW,GAAG,MAAOC,UAAU,IAAK;EAC/C,OAAO,MAAMH,KAAK,CAACI,IAAI,CAAC,GAAGH,OAAO,EAAE,EAAEE,UAAU,CAAC;AACnD,CAAC;;AAED;AACA,OAAO,MAAME,cAAc,GAAG,MAAOC,OAAO,IAAK;EAC/C,OAAO,MAAMN,KAAK,CAACO,GAAG,CAACN,OAAO,EAAE;IAAEO,MAAM,EAAEF;EAAQ,CAAC,CAAC;AACtD,CAAC;;AAED;AACA,OAAO,MAAMG,qBAAqB,GAAG,MAAAA,CAAA,KAAY;EAC/C,OAAO,MAAMT,KAAK,CAACO,GAAG,CAAC,GAAGN,OAAO,SAAS,CAAC;AAC7C,CAAC;;AAED;AACA,OAAO,MAAMS,kBAAkB,GAAG,MAAOC,EAAE,IAAK;EAC9C,OAAO,MAAMX,KAAK,CAACO,GAAG,CAAC,GAAGN,OAAO,IAAIU,EAAE,EAAE,CAAC;AAC5C,CAAC;;AAED;AACA,OAAO,MAAMC,sBAAsB,GAAG,MAAOC,WAAW,IAAK;EAC3D,OAAO,MAAMb,KAAK,CAACO,GAAG,CAAC,GAAGN,OAAO,IAAIY,WAAW,EAAE,CAAC;AACrD,CAAC;;AAED;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAOH,EAAE,EAAER,UAAU,KAAK;EACxD,OAAO,MAAMH,KAAK,CAACe,GAAG,CAAC,GAAGd,OAAO,IAAIU,EAAE,EAAE,EAAER,UAAU,CAAC;AACxD,CAAC;;AAED;AACA,OAAO,MAAMa,cAAc,GAAG,MAAOL,EAAE,IAAK;EAC1C,OAAO,MAAMX,KAAK,CAACiB,MAAM,CAAC,GAAGhB,OAAO,IAAIU,EAAE,EAAE,CAAC;AAC/C,CAAC;;AAED;AACA,OAAO,MAAMO,yBAAyB,GAAG,MAAAA,CAAOC,IAAI,GAAG,CAAC,EAAEC,KAAK,GAAG,EAAE,EAAEC,UAAU,GAAG,CAAC,KAAK;EACrF,OAAO,MAAMrB,KAAK,CAACO,GAAG,CAAC,GAAGN,OAAO,SAAS,EAAE;IAC1CO,MAAM,EAAE;MACNW,IAAI;MACJC,KAAK;MACLC;IACF;EACF,CAAC,CAAC;AACJ,CAAC;AACH;AACA,OAAO,MAAMC,kBAAkB,GAAG,MAAAA,CAAOX,EAAE,EAAEY,MAAM,KAAK;EACtD,OAAO,MAAMvB,KAAK,CAACe,GAAG,CAAC,GAAGd,OAAO,IAAIU,EAAE,eAAe,EAAE;IAAEY;EAAO,CAAC,CAAC;AACrE,CAAC;;AAED;AACA,OAAO,MAAMC,oBAAoB,GAAG,MAAAA,CAAOb,EAAE,EAAEY,MAAM,KAAK;EACxD,OAAO,MAAMvB,KAAK,CAACe,GAAG,CAAC,GAAGd,OAAO,IAAIU,EAAE,gBAAgB,EAAE;IAAEY;EAAO,CAAC,CAAC;AACtE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}