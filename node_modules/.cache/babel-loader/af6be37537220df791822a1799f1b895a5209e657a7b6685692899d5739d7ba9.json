{"ast":null,"code":"// src/services/userService.js\nimport axios from 'axios';\nconst API_URL = \"http://localhost:3000/usuarios\"; // Cambia según tu servidor\n\n// Servicio para crear un nuevo usuario\nexport const createUser = async userData => {\n  const response = await axios.post(`${API_URL}`, userData);\n  return response.data;\n};\n\n// Servicio para obtener todos los usuarios\nexport const getAllUsers = async token => {\n  const response = await axios.get(API_URL, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data;\n};\n\n// Servicio para obtener un usuario por ID\nexport const getUserById = async (id, token) => {\n  const response = await axios.get(`${API_URL}/${id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data;\n};\n\n// Servicio para iniciar sesión\nexport const loginUser = async (email, password) => {\n  const response = await axios.post(`${API_URL}/login`, {\n    email,\n    password\n  });\n  return response.data;\n};\n\n// Servicio para actualizar un usuario\nexport const updateUser = async (id, userData, token) => {\n  const response = await axios.put(`${API_URL}/${id}`, userData, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data;\n};\n\n// Servicio para eliminar un usuario\nexport const deleteUser = async (id, token) => {\n  const response = await axios.delete(`${API_URL}/${id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data;\n};","map":{"version":3,"names":["axios","API_URL","createUser","userData","response","post","data","getAllUsers","token","get","headers","Authorization","getUserById","id","loginUser","email","password","updateUser","put","deleteUser","delete"],"sources":["C:/davinci/hibridoC/gestion-bebidas/src/services/userService.js"],"sourcesContent":["// src/services/userService.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = \"http://localhost:3000/usuarios\"; // Cambia según tu servidor\r\n\r\n// Servicio para crear un nuevo usuario\r\nexport const createUser = async (userData) => {\r\n    const response = await axios.post(`${API_URL}`, userData);\r\n    return response.data;\r\n};\r\n\r\n// Servicio para obtener todos los usuarios\r\nexport const getAllUsers = async (token) => {\r\n    const response = await axios.get(API_URL, {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    });\r\n    return response.data;\r\n};\r\n\r\n// Servicio para obtener un usuario por ID\r\nexport const getUserById = async (id, token) => {\r\n    const response = await axios.get(`${API_URL}/${id}`, {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    });\r\n    return response.data;\r\n};\r\n\r\n// Servicio para iniciar sesión\r\nexport const loginUser = async (email, password) => {\r\n    const response = await axios.post(`${API_URL}/login`, { email, password });\r\n    return response.data;\r\n};\r\n\r\n// Servicio para actualizar un usuario\r\nexport const updateUser = async (id, userData, token) => {\r\n    const response = await axios.put(`${API_URL}/${id}`, userData, {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    });\r\n    return response.data;\r\n};\r\n\r\n// Servicio para eliminar un usuario\r\nexport const deleteUser = async (id, token) => {\r\n    const response = await axios.delete(`${API_URL}/${id}`, {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    });\r\n    return response.data;\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,gCAAgC,CAAC,CAAC;;AAElD;AACA,OAAO,MAAMC,UAAU,GAAG,MAAOC,QAAQ,IAAK;EAC1C,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,OAAO,EAAE,EAAEE,QAAQ,CAAC;EACzD,OAAOC,QAAQ,CAACE,IAAI;AACxB,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,GAAG,MAAOC,KAAK,IAAK;EACxC,MAAMJ,QAAQ,GAAG,MAAMJ,KAAK,CAACS,GAAG,CAACR,OAAO,EAAE;IACtCS,OAAO,EAAE;MACLC,aAAa,EAAE,UAAUH,KAAK;IAClC;EACJ,CAAC,CAAC;EACF,OAAOJ,QAAQ,CAACE,IAAI;AACxB,CAAC;;AAED;AACA,OAAO,MAAMM,WAAW,GAAG,MAAAA,CAAOC,EAAE,EAAEL,KAAK,KAAK;EAC5C,MAAMJ,QAAQ,GAAG,MAAMJ,KAAK,CAACS,GAAG,CAAC,GAAGR,OAAO,IAAIY,EAAE,EAAE,EAAE;IACjDH,OAAO,EAAE;MACLC,aAAa,EAAE,UAAUH,KAAK;IAClC;EACJ,CAAC,CAAC;EACF,OAAOJ,QAAQ,CAACE,IAAI;AACxB,CAAC;;AAED;AACA,OAAO,MAAMQ,SAAS,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAChD,MAAMZ,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,OAAO,QAAQ,EAAE;IAAEc,KAAK;IAAEC;EAAS,CAAC,CAAC;EAC1E,OAAOZ,QAAQ,CAACE,IAAI;AACxB,CAAC;;AAED;AACA,OAAO,MAAMW,UAAU,GAAG,MAAAA,CAAOJ,EAAE,EAAEV,QAAQ,EAAEK,KAAK,KAAK;EACrD,MAAMJ,QAAQ,GAAG,MAAMJ,KAAK,CAACkB,GAAG,CAAC,GAAGjB,OAAO,IAAIY,EAAE,EAAE,EAAEV,QAAQ,EAAE;IAC3DO,OAAO,EAAE;MACLC,aAAa,EAAE,UAAUH,KAAK;IAClC;EACJ,CAAC,CAAC;EACF,OAAOJ,QAAQ,CAACE,IAAI;AACxB,CAAC;;AAED;AACA,OAAO,MAAMa,UAAU,GAAG,MAAAA,CAAON,EAAE,EAAEL,KAAK,KAAK;EAC3C,MAAMJ,QAAQ,GAAG,MAAMJ,KAAK,CAACoB,MAAM,CAAC,GAAGnB,OAAO,IAAIY,EAAE,EAAE,EAAE;IACpDH,OAAO,EAAE;MACLC,aAAa,EAAE,UAAUH,KAAK;IAClC;EACJ,CAAC,CAAC;EACF,OAAOJ,QAAQ,CAACE,IAAI;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}